## Abandon All Hope Ye Who Edit Here

## TEAM 4557 Scouting Program Configuration - AKA The Beast

## Lines that begin with "##" will not be read by the program, they are considered comments

## To you who are

##
## --------Elements--------
## Elements are used to build the user interface in the phone app
## Elements consist of 4 parts:
##  1. A "Type" - Tells the phone how it should display the element and what type of data(number,text) can be stored
##  2. "Arguments" - Gives additional information about how the phone should display the Element
##  3. A "Description" - A short message for the phone to display before the Element, describes what the Element does
##  4. A "Key" - A UNIQUE identifier used by the phone to tell the elements apart. THESE MUST BE UNIQUE

## The Type, Description, and Key are separated by two semicolons (;;). The program will not work for only one semicolon. Two are required.
## Thou must have two semicolons. Two shall be the number of the semicolons and the number of the semicolons shall be two.
## Three semicolons shalt thou not have, neither shalt thou have one semicolon, excepting that thou then proceedeth to two. Four is right out.

##  The possible Types along with their arguments are shown below
## 		SEGMENTED_CONTROL 
##          Used to give the user a choice between two or more options
##          args=[<Selection 1, Selection 2,Selection n>]
##			Format= SEGMENTED_CONTROL<args>;;[Title];;[Key]
##			For example, for a segmented control with options "Yes No Try/Fail" titled "Scored Goals" would look like:
##			SEGMENTED_CONTROL <Yes,No,Try/Fail>;;Scored Goals;;teleop_scored_goals
##		TEXTFIELD 
##          Allows the user to type in their own value, can be limited to just numbers through arguments
##          args=[<keyboard type>] where type is any of the following... {decimal, number, normal}
##			Format= TEXTFIELD<args>;;[Title];;[Key]
##			For example, making a textfield with the title "Points Scored" would look like:
##			TEXTFIELD<normal>;;Points Scored;;total_points_scored
##		STEPPER
##          Allows the user to select an integer between two numbers
##          args=[<lower bound, upper bound>]
##			Format= STEPPER<args>;;[Title];;[Key]
##			For example a stepper that operated between bounds 0 and 5 inclusive titled "Boxes stacked" would look like:
##			STEPPER <0,5>;;Boxed stacked;;teleop_boxes_stacked
##		LABEL 
##          Merely informative.  Use the "distinguished" style to differentiate between sections i.e. Autonomous, TeleOp, Human, etc.
##          args=[<style, justification>] where style is any of the following... {bold, normal, distinguished} and justification is {left, center, right}
##			Format= LABEL;;[Label Title]
##			For example a label titled "Autonomous" that is clear by drawing lines around it would look like:
##          Labels DO NOT have keys!
##			LABEL <distinguished>;;"Autonomous"
##		SWITCH 
##          Allows the user to answer a simple Yes/No Question, multiple switches can be created in a single line
##          args=[Title 1, title 2, title n...];;[key 1, key 2, key n...]
##			Format= SWITCH;;args titles;;args keys
##			For example a series of switchs with titles "Passes one", and "Passes two" would look like:
##			SWITCH;;Passes one, Passes two;;aut_passes1, aut_passes2
##			There are a maximum of 6 switches in a single line.
##		SLIDER
##          Allows the user to move a slider to select a number between two bounds
##          args=[<lower bound, upper bound>]
##			Format= SLIDER <args>;;Title;;key
##			For example a slider titled "Shot accuracy" would look like:
##			SLIDER <0,10>;;Shot Accuracy;;teleop_shot_accuracy

LABEL <distinguished, center>;;Autonomous
SEGMENTED_CONTROL <Yes,No,Try/Fail>;;Reaches defenses?;;aut_reaches_defenses
SEGMENTED_CONTROL <Yes,No,Try/Fail>;;Crosses defenses?;;aut_crosses_defenses
LABEL <normal, center>;;Can overcome defense (check all that apply)
SWITCH;;Portcullis,Cheval Frise,Moat,Ramparts;;aut_portcullis,aut_chevalDeFrise,aut_moat,aut_ramparts
SWITCH;;Drawbridge,Sally Port,Rock wall,Rough Terrain;;aut_drawbridge,aut_sallyport,aut_rockwall,aut_rough_terrain
SEGMENTED_CONTROL <High tower,Low Tower,Try/Fail, None>;;Scores tower?;;aut_shoots
SEGMENTED_CONTROL <Yes,No,Try/Fail>;;Can pass under low bar;;aut_underLowBar

LABEL <distinguished, center>;;TeleOp
SEGMENTED_CONTROL <Neutral Zone, Spy>;;Starting Positions;;teleop_starting_position
LABEL <normal, center>;;Can overcome defense (check all that apply)
SWITCH;;Portcullis,Cheval Frise,Moat,Ramparts;;teleop_portcullis,teleop_chevalDeFrise,teleop_moat,teleop_ramparts
SWITCH;;Drawbridge,Sally Port,Rock wall,Rough Terrain;;teleop_drawbridge,teleop_sallyport,teleop_rockwall,teleop_rough_terrain
SEGMENTED_CONTROL <Yes,No,Try/Fail>;;Can pass under low bar;;teleop_underLowBar
SLIDER <0,10>;;Shot Accuracy;;teleop_shot_accuracy

## --------EQUATIONS--------

##  Equations are used to determine an overall score for different parts, such as an overall score for TELEOP, or an overall score for AUTONOMOUS
##		Add equations to the bottom of the document. To create an Equation, the arguments are
##			@EQUATION [name]=[equation]
##		The ['equation'] portion of the arguments must be a mathematical equation referring to "keys" created in previous elements.
##		The keys must refer back to numerical values, so if the key is a String (such as team color), it will not work in an equation. This has the exception of Switches, where Yes is 1 and No is 0.
##		Viable operators are the four basic operators (+, â€“, /, *), and parenthesis for grouping math. Exponents are not included, if you wish to use a power, key^n, do key * key * key, etc. n times
##		For example, an equation for teleop finding an arbitrary score could look like...
##			@EQUATION TELEOP=(teleop_boxes_scored+teleop_goals_score+(teleop_shots_attempted / 4)) / 3
##
##      IMPORTANT: ONLY THE FOLLOWING ELEMENTS MAY BE USED IN EQUATIONS
##          - SEGMENTED_CONTROL - ONLY with arguments of <Yes,No,Try/Fail> Yes=1, No=0, Try/Fail=.5
##          - TEXTFIELD - ONLY with arguments of <decimal> or <number>
##          - STEPPER - Go crazy
##          - SWITCH - Yes=1, No=0
##          - SLIDER - See: STEPPER
##      If an Element besides the ones listed above is used, the program will replace its value with 0.

@EQUATION AUTONOMOUS=(2*aut_reaches_defenses+2*aut_crosses_defenses+aut_portcullis+aut_sallyport) / 4
@EQUATION TELEOP=(teleop_portcullis+teleop_chevalDeFrise+teleop_moat+teleop_ramparts+teleop_drawbridge+teleop_sallyport+teleop_rockwall+teleop_rough_terrain) / 8
@EQUATION HUMAN=0

## --------EXTRA HELP--------
## If you find yourself still confused as to how you should edit this file, you can find an instructional video below
## https://youtu.be/dQw4w9WgXcQ